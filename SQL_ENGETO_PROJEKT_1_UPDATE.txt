---COUNTRIES TABLE
--GDP_per_head - HDP počítáné na obyvatele
--life_exp_diff - rozdíl mezi očekávanou dobou dožití mezi roky 2015 a 1965

-- spojujeme tabulky countries a economies

CREATE TABLE t_DS_countries AS

SELECT 
    c.population_density,
    c.country,  
    c.median_age_2018, 
    e.gini, 
    e.population,
    e.mortaliy_under5,
    round(e.GDP / e.population, 2) AS GDP_per_head,
    (le.life_exp2015-le2.life_exp1965) as life_exp_diff
FROM 
	countries c 
	LEFT JOIN economies e ON c.country
				=
				e.country
	LEFT JOIN 
	(SELECT 
		country, life_expectancy as life_exp2015 from life_expectancy where year = 2015) le ON c.country
				  								=
												 le.country 
	LEFT JOIN  
	(SELECT 
		country, life_expectancy as life_exp1965 from life_expectancy where year = 1965) le2 ON le.country
 												= 
												le2.country
WHERE e.gini IS NOT NULL 
    AND median_age_2018 IS NOT NULL
GROUP BY country
ORDER BY e.gini desc;

---RELIGIONS TABLE
--- Tabulka generuje na jednotlivých řádcích podíly na jednotlivých náboženstvích v procentech v konrétních zemích.

CREATE TABLE t_DS_religions AS

SELECT 
    r.country,
    r.population,
    round(r.Christianity/r1.total_population*100, 2) AS Christianity, round(r.Islam/r1.total_population*100, 2) AS Islam, round(r.Unaffiliated_religions/r1.total_population*100, 2) as Unaffiliated_religions,
	round(r.Hinduism/r1.total_population*100, 2) AS Hinduism, round(r.Buddhism/r1.total_population*100, 2) as Buddhism, round(r.Folk_religions/r1.total_population*100, 2) as Folk_religions,
	round(r.Other_religions/r1.total_population*100, 2) AS Other_religions, round(r.Judaism/r1.total_population*100, 2) AS Judaism
FROM
	(SELECT 
		country, 
		SUM(population) AS population, 
		SUM(case when religion = 'Christianity' then population else 0 end) AS Christianity,
		SUM(case when religion = 'Islam' then population else 0 end) AS Islam,
		SUM(case when religion = 'Unaffiliated Religions' then population else 0 end) AS Unaffiliated_religions, 
		SUM(case when religion = 'Hinduism' then population else 0 end) AS Hinduism, 
		SUM(case when religion = 'Buddhism' then population else 0 end) AS Buddhism, 
		SUM(case when religion = 'Folk Religions' then population else 0 end) AS Folk_religions,
   		SUM(case when religion = 'Other Religions' then population else 0 end) AS Other_religions,
		SUM(case when religion = 'Judaism' then population else 0 end) AS Judaism
FROM 
   religions 
GROUP BY country ) r
	JOIN 
		(SELECT
    			country, 
    			SUM(population) AS total_population 
			FROM religions r2 
			GROUP BY country) r1
			ON 	r.country 
			= 
				r1.country
;

----GENERAL INFO TABLE
--spojujeme tabulky covid19_basic_differences a lookup_table

CREATE TABLE t_DS_general_info_table AS
SELECT 
	cbd.date, 
	cbd.country, 
	cbd.confirmed, 
	ct.tests_performed, 
	lt.population
FROM
	(SELECT
	 	date, 
		CASE country WHEN "Czechia" THEN "Czech Republic" ELSE country END AS country, 
		confirmed 
	FROM covid19_basic_differences) cbd 
		JOIN
		(SELECT 
			country, 
			date, 
			tests_performed FROM covid19_tests ) ct
		ON cbd.date 
		= 
		ct.date AND cbd.country = ct.country
		JOIN
		(SELECT 
			country, 
			population 
    		FROM lookup_table ) lt
    		ON lt.country 
		= 
		cbd.country
;


--WEATHER TABLE 
--number_of_hours_without_rain - počet hodin kdy byly srážky nenulové
--avg_temp - denní teplota počítána jako průměr teplot mezi 6-18 hod
--binary_day - počítá proměnnou pro víkend = 1, pracovní den = 0
--season_code - pocítá roční období daného dne: zima = 3, podzim = 2, léto = 1, jaro = 0
--max_wind_during_day - maximální síla větru během dne


CREATE VIEW v_DS_weather AS
SELECT
    CAST(`date`AS date) AS`date`,
    city,
ROUND(CAST((REPLACE(rain,' mm','')) AS FLOAT), 2) AS number_of_hours_without_rain,
AVG(CAST(REPLACE(`temp`,' °c','') as FLOAT)*1) AS avg_tmp ,
  
 CASE WHEN dayname(date) IN ('Sunday', 'Saturday') THEN 1 ELSE 0 END AS binary_day,
  CASE WHEN month(date) IN (12, 1, 2) THEN 3
  WHEN month(date) IN (3, 4, 5) THEN 0
 WHEN month(date) IN (6, 7, 8) THEN 1
    WHEN month(date) IN (9, 10, 11) THEN 2
   ELSE null END AS season_code ,
    MAX (wind) AS max_wind_during_day
FROM weather
 WHERE ROUND(CAST((REPLACE(rain,' mm','')) AS FLOAT), 2) > 0
   AND time IN ('6:00','9:00','15:00','18:00')
GROUP by city
ORDER by date;


******************************************************************************************************************************************


*******************************************************************************************************************************************
---FINAL SQL QUERY 

SELECT
	c.*,
	g.date,
	g.confirmed,
	g.tests_performed, 
	w.season_code,  
	w.binary_day, 
	w.avg_tmp,
	w.max_wind_during_day,
	w.number_of_hours_without_rain,
	w.season_code,
   	r.Christianity, r.Islam, r.Unaffiliated_religions, r.Hinduism, r.Buddhism, r.Folk_religions, r.Other_religions, r.Judaism
FROM 
	(SELECT 
    		* 
	FROM t_DS_countries ) c
		LEFT JOIN
			(SELECT 
   			 	*
			FROM t_DS_religions ) r
			ON c.country 
			= 
			r.country
		LEFT JOIN 
			(SELECT 
    				* 
 			FROM t_DS_general_info_table) g
			ON g.country 
			= 
			c.country 
		LEFT JOIN
			(SELECT 
    				* 
			FROM v_DS_weather) w
			ON w.date 
			= 
			g.date
;

